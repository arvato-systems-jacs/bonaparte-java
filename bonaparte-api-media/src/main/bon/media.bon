import api.*

package api.media XML PROPERTY factoryId 25 {
    
    /** Defines the format of the data output. */
    enum MediaType {
        // structured output types (record output)
        BONAPARTE = "B", ^XML = "L", JSON = "J", NULL = "N", COMPACT_BONAPARTE = "c", XLS = "X", XLSX="x", CSV = "C", 
        // textual document file output types
        TEXT = "T", HTML="H", CSS="S", MARKDOWN = "m", TEX = "t", LATEX = "l",
        // binary document output types
        PDF = "P", DVI = "D", POSTSCRIPT = "o",
        // images
        JPG = "j", PNG = "p", GIF = "g", TIFF = "f",
        // audio
        WAV = "w", MP3 = "3",
        // video
        MPG = "M", MP4 = "4",
        // anything else
        RAW = "#",
        // user defined or undefined
        USER_DEFINED = "U", UNDEFINED = "?" 
    }
    
    xenum MediaXType is MediaType:1;

    enum MediaCategory {
        OTHER       = "?",      // none of the below
        AUDIO       = "A",
        VIDEO       = "V",      // video format: pictures + sound
        IMAGE       = "I",
        RECORDS     = "R",      // format suitable to transmit data records
        TEXT        = "T",      // textual document (not textual data file format)
        DOCUMENT    = "B"       // binary document     
    }
     
    enum EnumOutputType {
        DEFAULT="D", TOKEN="T", NAME="N", DESCRIPTION="O"  // description is translated text
    }

    class MediaTypeDescriptor classId 100 {
        required xenum MediaXType                   mediaType;
        required Ascii(6)                           defaultFileExtension;           // file extension (without a dot)
        required enum MediaCategory                 formatCategory;                 // which type of data is it?
        required boolean                            isText;                         // false = raw data, true = text
        required Ascii(64)                          mimeType;                       // MIME type
    }
    
    class MediaData classId 101 {
        required xenum MediaXType                   mediaType;                      // defines the content type
        optional Unicode(8000000) allowControlChars text;                           // textual data stored here
        optional Binary(8000000)                    rawData;                        // binary data
        optional Json                               z;                              // variable attributes like encoding / charset, image width / height etc
    }
    
    class Image classId 102 extends MediaData {
        optional Integer                            width;                          // width of the image, if known
        optional Integer                            height;                         // height of the image, if known
    }
}
