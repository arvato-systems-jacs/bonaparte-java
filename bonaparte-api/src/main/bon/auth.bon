package api.auth factoryId 25 {

    enum OperationType {
        EXECUTE     = "X",  // execute is used in the context of permissions
        LOOKUP      = "L",  // resolve the primary key by specifying an alternate key, also, checking the existence of a record
        CREATE      = "C",  // create a new record
        READ        = "R",  // read an existing record
        UPDATE      = "U",  // update an existing record
        DELETE      = "D",  // delete record
        INACTIVATE  = "I",  // deactivate a record
        ACTIVATE    = "A",  // (re)activate a record
        VERIFY      = "V",  // verify that the primary and a provided alternate key refer to the same resource 
        MERGE       = "M",  // create or update (unkown prior state)
        PATCH       = "P"   // field wise integration (update all non-null fields, or all fields by bitmap)
    }
    
    enumset<short>  PermissionSet       is OperationType;   // compact storage (2 bytes in Bonaparte compact format)
    enumset<String> PermissionSetAlpha  is OperationType;   // readable format
    
    

    // JSON Web Token as per https://tools.ietf.org/html/rfc7519
    final class Jwt classId 17 {
        required (Alg)                  alg;
        required (Payload...)           payload;
        required Binary(32)             sig;        // use a zero byte length signature for alg = none
    }
    
    final class Alg classId 18 {
        required Ascii(3)               typ;        // "JWT"
        required Ascii(16)              alg;        // usually not more than 5 ("HS256"...), but more in case of encrpyted JWTs
        optional Ascii(3)               cty;        // content type
    }
    
    class Payload classId 19 {
        optional Unicode(255)           iss;        // issuer
        optional Unicode(255)           sub;        // subject (user ID)
        optional Unicode(255)           aud;        // audience
        optional Instant                exp;        // expiration (time)
        optional Instant                nbf;        // not before
        optional Instant                iat;        // issued at
        optional Unicode(40)            jti;        // JSON token identifier (unique ID)
        
        // commonly used fields...
        optional Unicode(255)           name;       // user name (user real world name)
        optional Ascii(6)               locale;     // BCP47 locale (ISO639-A2, plus optional "-" or "_" and then ISO3166-A2) 6 characters to allow for 3 letter language
        optional Ascii(64)              zoneinfo;   // IANA 2015g or later time zone info string

        // fields used by this implementation... (references are internal numeric keys)
        optional Long                   s;          // session reference
        optional Long                   t;          // tenant reference
        optional Long                   u;          // user reference
        optional Long                   r;          // role restriction / reference
        optional Long                   o;          // extension (org unit reference)
        optional Long                   l;          // extension (location reference)
        optional Enumset PermissionSet  pl;         // minimum permissions (lower bound, set always allowed)
        optional Enumset PermissionSet  pu;         // maximum permissions (upper bound, permissions not in this set are never allowed)
    }
}
