package (com.foo) test.jaxb.schema XML PROPERTY BeanVal {
    properties xmlUppercase, xmlAllUppercase, xmlAttribute, xmlId;

    enum MyEnum {
        HELLO, WORLD
    }

    enum MyAlphaEnum {
        HELLO="h", WORLD="w", STARS="s"
    }

    enumset MyEnumSet           is MyAlphaEnum;

    type countryCode            is Uppercase(2..2);

    type numCurrencyCode        is int(3);

    type myEnumset              is enumset MyEnumSet;


    class TestSub {
        Ascii(10)                       myAscii;
    }

    class TestXml xmlRoot {
        int                             test;
        Decimal(12,6)                   num;
        Ascii(10)                       data;
        (TestSub)                       subObject;
        (TestSub...)                    subObjectOrChild;
        Unicode(80) List<>              texts;
        Object                          anyBonaPortable;
    }

    class TestXmlMap xmlRoot {
        int                             test;
        Decimal(12,6) Map<String>       myMap;
        enum MyEnum                     myReqStdEnum;
        enum MyAlphaEnum                myReqAlphaEnum;
        optional Enum MyEnum            myOptStdEnum;
        optional Enum MyAlphaEnum       myOptAlphaEnum;
        required enumset MyEnumSet      myEnumSet;
    }

    class SubExtended extends TestSub {
        int                             extraObject;
    }

    class MapExtended xmlRoot extends TestXmlMap {
        int                             afterTheMap;
    }

    class TestTemporal xmlRoot=records {
        Day                             myDay;
        Time                            myTime;
        Timestamp(0)                    wallClock;
        Instant                         event;
        boolean                         isIt;
        Uuid                            myUUID;
        binary(20)                      rawData;        // check: is the XSD size the encoded length or the resulting binary length?
    }

    class TestXmlAllUpperAndAttribute XML PROPERTY UPPERCASE xmlRoot {
        int                             test1;
        int                             test2 properties xmlAttribute;
    }

    class TestXmlUpperAndAttribute xmlRoot {
        int                             test1;
        int                             test2 properties xmlAttribute;
        int                             test3 properties xmlUppercase;
        int                             test4 properties xmlUppercase, xmlAttribute;
    }

    class TestXmlAllUpperAndCustom XML PROPERTY ALL_UPPERCASE xmlRoot {
        int                             test1;
        int                             test2 properties xmlId="TeSt33";
    }

    class TestXmlDummy XML PROPERTY xmlRoot {
        int                             test1;
        int                             test2 properties xmlUppercase;
        int                             test3 properties xmlAllUppercase;
        int                             test4 properties xmlId="TeSt4334";
    }
}
