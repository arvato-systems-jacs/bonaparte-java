<?xml version="1.0" encoding="UTF-8"?>
<!-- autogenerated by bonaparte DSL -->
<xs:schema targetNamespace="http://foo.com/schema/test_jaxb_schema.xsd"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:bon="http://www.jpaw.de/schema/bonaparte.xsd"
  xmlns:test_jaxb_schema="http://foo.com/schema/test_jaxb_schema.xsd"
  elementFormDefault="qualified"
  >

    <xs:import namespace="http://www.jpaw.de/schema/bonaparte.xsd" schemaLocation="bonaparte.xsd"/>
    <xs:simpleType name="MyEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HELLO"/>
            <xs:enumeration value="WORLD"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MyAlphaEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HELLO"/>
            <xs:enumeration value="WORLD"/>
            <xs:enumeration value="STARS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MyEnumSet">
        <xs:list itemType="test_jaxb_schema:MyAlphaEnum"/>
    </xs:simpleType>
    <xs:simpleType name="countryCode">
        <xs:restriction base="xs:string">
            <xs:minLength value="2"/>
            <xs:maxLength value="2"/>
            <xs:pattern value="([A-Z])*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="numCurrencyCode">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="-999"/>
            <xs:maxInclusive value="999"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="myEnumset">
        <xs:restriction base="test_jaxb_schema:MyEnumSet"/>
    </xs:simpleType>
    <xs:complexType name="TestSub">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="myAscii" minOccurs="0" nillable="true">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="10"/>
                                <xs:pattern value="\p{IsBasicLatin}*"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXml">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="test" type="xs:int"/>
                    <xs:element name="num" minOccurs="0" nillable="true">
                        <xs:simpleType>
                            <xs:restriction base="xs:decimal">
                                <xs:totalDigits value="12"/>
                                <xs:fractionDigits value="6"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="data" minOccurs="0" nillable="true">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="10"/>
                                <xs:pattern value="\p{IsBasicLatin}*"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="subObject" minOccurs="0" nillable="true" type="test_jaxb_schema:TestSub"/>
                    <xs:element name="subObjectOrChild" minOccurs="0" nillable="true" type="test_jaxb_schema:TestSub"/>
                    <xs:element name="texts" minOccurs="0" maxOccurs="unbounded" nillable="true">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="80"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="anyBonaPortable" minOccurs="0" nillable="true" type="bon:BONAPORTABLE"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXmlMap">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="test" type="xs:int"/>
                    <xs:element name="myMap" minOccurs="0" maxOccurs="unbounded" nillable="true">
                        <xs:simpleType>
                            <xs:restriction base="xs:decimal">
                                <xs:totalDigits value="12"/>
                                <xs:fractionDigits value="6"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="myReqStdEnum" type="test_jaxb_schema:MyEnum"/>
                    <xs:element name="myReqAlphaEnum" type="test_jaxb_schema:MyAlphaEnum"/>
                    <xs:element name="myOptStdEnum" minOccurs="0" nillable="true" type="test_jaxb_schema:MyEnum"/>
                    <xs:element name="myOptAlphaEnum" minOccurs="0" nillable="true" type="test_jaxb_schema:MyAlphaEnum"/>
                    <xs:element name="myEnumSet" type="test_jaxb_schema:MyEnumSet"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SubExtended">
        <xs:complexContent>
            <xs:extension base="test_jaxb_schema:TestSub">
                <xs:sequence>
                    <xs:element name="extraObject" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="MapExtended">
        <xs:complexContent>
            <xs:extension base="test_jaxb_schema:TestXmlMap">
                <xs:sequence>
                    <xs:element name="afterTheMap" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestTemporal">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="myDay" minOccurs="0" nillable="true" type="xs:date"/>
                    <xs:element name="myTime" minOccurs="0" nillable="true" type="xs:time"/>
                    <xs:element name="wallClock" minOccurs="0" nillable="true" type="xs:dateTime"/>
                    <xs:element name="event" minOccurs="0" nillable="true" type="xs:long"/>
                    <xs:element name="isIt" type="xs:boolean"/>
                    <xs:element name="myUUID" minOccurs="0" nillable="true" type="bon:UUID"/>
                    <xs:element name="rawData">
                        <xs:simpleType>
                            <xs:restriction base="xs:base64Binary">
                                <xs:maxLength value="20"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXmlAllUpperAndAttribute">
        <xs:attribute name="Test2" use="required" type="xs:int"/>
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="Test1" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXmlUpperAndAttribute">
        <xs:attribute name="test2" use="required" type="xs:int"/>
        <xs:attribute name="Test4" use="required" type="xs:int"/>
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="test1" type="xs:int"/>
                    <xs:element name="Test3" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXmlAllUpperAndCustom">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="TEST1" type="xs:int"/>
                    <xs:element name="TeSt33" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TestXmlDummy">
        <xs:complexContent>
            <xs:extension base="bon:BONAPORTABLE">
                <xs:sequence>
                    <xs:element name="test1" type="xs:int"/>
                    <xs:element name="Test2" type="xs:int"/>
                    <xs:element name="TEST3" type="xs:int"/>
                    <xs:element name="TeSt4334" type="xs:int"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
