package meta {
	default unsigned required trim noControlChars;

    type identifier is Ascii(255);
    
    enum Visibility { DEFAULT, PRIVATE, PROTECTED, PUBLIC }
    enum BundleStatus { UNUSED, RESOLVED, INSTALLED, STARTING, SHUTTING_DOWN, MAINTENANCE }  // borrow OSGi statuses
    
        
	abstract class FieldDefinition {
	    enum Visibility visibility;
		boolean isRequired;
		required identifier name;
		boolean isArray;
		Integer maxCount;
	}
	
	class ObjectReference extends FieldDefinition {
        boolean allowSubclasses;    
		required identifier objectName;		
	}
	
	// ElementaryDataItem is used for some as well as for types which don't need a parameter
	// day, char, boolean
    class ElementaryDataItem extends FieldDefinition {
        ascii(20) dataType;
        boolean isPrimitive;
    }

    // EnumDataItem represents the special enum type
    class EnumDataItem extends ElementaryDataItem {
        required identifier enumName;  // HQON of enum
        ascii(39) [] values;
    }

    // MiscElementaryDataItem represents some miscellaneous types
    // timestamp, raw
    class MiscElementaryDataItem extends ElementaryDataItem {
        boolean isSigned;
        int totalDigits;
        int decimalDigits;
    }

    // NumericElementaryDataItem represents all numeric items (float and double and other primitives only fill the isSigned) 
    class NumericElementaryDataItem extends ElementaryDataItem {
        boolean isSigned;
        int totalDigits;
        int decimalDigits;
    }

    // AlphanumericElementaryDataItem represents all text based fields
    // ascii, unicode, uppercase, lowercase, string 
    class AlphanumericElementaryDataItem extends ElementaryDataItem {
        boolean doTrim;
        boolean allowControlCharacters;
        int length;
        ascii(500) ^regexp;
    }
	
	// holds all meta information for a class
	class ClassDefinition {
		boolean isAbstract;
		boolean isFinal;
		required identifier name;
		Ascii(20) ^revision;
		identifier parent;
        identifier ^bundle;  // OSGi bundle / module
		int numberOfFields;
		optional (FieldDefinition...)[] fields;
		optional Timestamp(3) whenLoaded;
	}
	
	class BundleInformation {
	    required identifier name;
        required identifier [] packages;
	    unicode(255) classPath;
        enum BundleStatus bundleStatus;
	    optional Timestamp(3) whenStatusChanged; 
	}
}