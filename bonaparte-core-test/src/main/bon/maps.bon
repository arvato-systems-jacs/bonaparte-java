package mapTests {
    default public;

    type countryCode is uppercase(3);
    enum Color { RED, GREEN, BLUE }
    enum AlphaColor { RED="R", GREEN="G", BLUE="B" }

    class Unrelated {
        int             t;
        Ascii(32)       str;
    }

    class Maps1 {
        Integer                 Map<Integer>    primes;
        Unicode(50)             Map<String>     ccConverter;
        Integer                 Map<String>     unused;
        enum AlphaColor         Map<String>     primaryColor;
        required (Unrelated...) Map<Long>       longToBonaPortable;
    }

    class Sets1 {
        Integer                 Set<20>         iSet;
        Ascii(10)               Set<>           sSet;
        required (Unrelated...) Set<>           bSet;
    }

    class ReqTests {
        required Integer                        ar;     // null generates an exception
        optional Integer                        ao;     // null is allowed

        required Integer List<>                 lro;    // an optional list, all elements must be non-null
        optional Integer List<>                 loo;    // an optional list, with elements possibly also null (discouraged)
        required Integer required List<>        lrr;    // the List must be non-null and all elements must be non-null
        optional Integer required List<>        lor;    // the List must be non-null, but the Integer elements may be null (discouraged!)
        required Integer Map<String>            mro;
        optional Integer Map<String>            moo;
        required Integer required Map<String>   mrr;
        optional Integer required Map<String>   mor;
    }
}
